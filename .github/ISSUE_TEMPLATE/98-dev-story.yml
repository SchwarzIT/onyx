name: "[Team] Create a development task ðŸ“—"
description: Template for development tasks. Exclusively used by the onyx core team for project management.
title: "Implement|Fix|Define"
projects:
  - SchwarzIT/5
labels:
  - dev
  - 0-refinement

body:
  - type: textarea
    id: description
    attributes:
      label: Why?
      description: Briefly describe what the DEV task is about and whats the motivation behind it.
    validations:
      required: true

  - type: textarea
    id: open-questions
    attributes:
      label: Open questions / TODOs
      description: Are there any open questions or TODOs that need to be clarified before the task can be worked on?
      value: <!-- Add questions if there are any, use `@` to tag people. -->

  - type: textarea
    id: dependencies
    attributes:
      label: Depends on
      description: Issues/tickets that this issue depends on.
      value: "<!-- Add relevant tickets, e.g., #123 -->"

  - type: textarea
    id: design
    attributes:
      label: Design
      description: UX design information, e.g. Figma link, screenshots etc.
      value: "[Figma](ADD_FIGMA_LINK_HERE)"

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance criteria
      description: Which criteria have to be implemented to consider the task as completed?
    validations:
      required: true

  - type: textarea
    id: implementation-details
    attributes:
      label: Implementation details
      value: |
        <-- Add technical details / implementation proposals if necessary, e.g.:
          - API proposal
          - relevant web APIs
          - learnings from other implementations
          - code snippets
          -->

  - type: textarea
    id: reference-implementations
    attributes:
      label: Reference implementations
      value: |
        <!-- Add links to other frameworks. Possible examples:
          - [Nuxt UI](https://nuxt.com/docs/getting-started/installation)
          - [Elements Plus](https://element-plus.org/en-US/component/overview.html)
          - [shadcn-vue](https://www.shadcn-vue.com/docs/components/accordion.html)
          - [W3C (for structural inspiration)](https://design-system.w3.org/components)
        -->

  - type: textarea
    id: aria-pattern
    attributes:
      label: Applicable ARIA Pattern
      description: For a list of available patters, see [W3C ARIA patterns](https://www.w3.org/WAI/ARIA/apg/patterns/).
      value: <!-- Add link to ARIA pattern if applicable, see [W3C ARIA patterns](https://www.w3.org/WAI/ARIA/apg/patterns/) -->

  - type: textarea
    id: dev-handover
    attributes:
      label: DEV handover checklist
      description: This checklist must be completed when the DEV task is done and is reviewed by another developer. You can shorten / extend the checklist as needed.
      value: |
        [Storybook](ADD_LINK_HERE)

        DEV handover done with: @ADD_DEV_NAME_HERE

        **Testing**
        - [ ] covered by visual screenshot tests
        - [ ] covered by functional tests (Playwright or unit test)

        **Documentation**
        - [ ] "New" badge in Storybook is added, see [storybook-addon-tag-badges](https://github.com/Sidnioulz/storybook-addon-tag-badges/?tab=readme-ov-file#-usage)
        - [ ] auto-generated Storybook code snippets are checked
        - [ ] example usage added to `apps/demo-app/src/views/HomeView.vue`
        - [ ] component status has been updated in the [docs overview](https://onyx.schwarz/#components)
        - [ ] updated version is released
        - [ ] updated documentation is deployed

        **Other**
        - [ ] follow-up tickets were created if necessary (add links below)
    validations:
      required: true

  - type: textarea
    id: ux-handover
    attributes:
      label: UX handover checklist
      description: This checklist must be completed when the DEV task is done and is reviewed by a designer. You can shorten / extend the checklist as needed.
      value: |
        UX handover done with: @ADD_UX_NAME_HERE

        **Naming is aligned with Figma**
        - [ ] component name
        - [ ] which support components are used and how they are named
        - [ ] all property names and types

        **Implementation is checked**
        - [ ] all features of Figma are implemented or a follow-up ticket is refined
        - [ ] skeleton
        - [ ] densities
        - [ ] light and dark mode
        - [ ] truncation
        - [ ] responsiveness / wrapping behavior
        - [ ] min / max width

        **Figma**
        - [ ] Figma component is published

        **Documentation**
        - [ ] Storybook category is aligned with Figma
        - [ ] Storybook examples are checked

        **Other**
        - [ ] follow-up tickets were created if necessary (add links below)
    validations:
      required: true
