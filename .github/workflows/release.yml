name: Release
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  # The release + deployment will be done on "prod" stage if on main branch, on "dev" stage otherwise
  STAGE: prod
  TURBO_TOKEN: ${{ secrets.TURBO_REMOTE_CACHE__TURBO_TOKEN }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          ssh-key: ${{ secrets.GH_PUSH_PROTECTED_KEY }}
          # needed when building VitePress docs so timestamps can be calculated correctly
          fetch-depth: 0

      - uses: ./.github/templates/node-setup

      # the docs need to be build AFTER the release because there the changelogs are generated which need to be included in the
      # documentation build
      - name: üõ†Ô∏è Build docs and demo app
        run: pnpm build:all --filter demo-app
        env:
          # needed for increase rate limit for the GitHub API that is used when building
          # the VitePress documentation
          VITEPRESS_GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          ls -la apps/demo-app
          ls -la apps/demo-app/.output

      - name: Upload demo app artifact
        uses: actions/upload-artifact@v4
        with:
          name: demo-app
          path: apps/demo-app/.output
          # we need to include hidden files because the folder name starts with a dot
          # see: https://github.com/actions/upload-artifact?tab=readme-ov-file#uploading-hidden-files
          include-hidden-files: true

  deploy_demo_app:
    name: Deploy demo app
    runs-on: ubuntu-latest
    needs: release
    environment: prod
    steps:
      - uses: actions/checkout@v5

      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: demo-app
          path: apps/demo-app/.cloud-foundry/.output

      - name: Copy .node-version file
        # Cloud Foundry requires a ".nvmrc" file for defining the node version to use
        run: cp .node-version apps/demo-app/.cloud-foundry/.nvmrc

      - name: Deploy to Cloud Foundry
        uses: ./.github/templates/cf-push
        with:
          endpoint: ${{ vars.CF_ENDPOINT }}
          org: ${{ vars.CF_ORG }}
          username: ${{ vars.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          space: ${{ env.STAGE }}
          working-directory: apps/demo-app/.cloud-foundry
