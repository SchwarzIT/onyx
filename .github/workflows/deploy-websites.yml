# Deploys all onyx websites - Docs, Storybook etc.
name: Deploy websites
on:
  push:
    tags:
      - v**
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        default: dev
        description: Environment to release to

env:
  TURBO_TOKEN: ${{ secrets.TURBO_REMOTE_CACHE__TURBO_TOKEN }}

jobs:
  deploy_storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || contains(github.ref_name, 'dev') && 'dev' || 'prod' }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/templates/node-setup

      - name: üõ†Ô∏è Build Storybook
        run: pnpm build:all --filter=sit-onyx

      - name: ‚õìÔ∏è Link Sources
        run: ln -s packages/sit-onyx/storybook-static packages/sit-onyx/.cloud-foundry/www

      - name: ‚õÖÔ∏è Deploy to Cloud Foundry
        uses: ./.github/templates/cf-push
        with:
          endpoint: ${{ vars.CF_ENDPOINT }}
          org: ${{ vars.CF_ORG }}
          username: ${{ vars.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          space: ${{ inputs.environment }}
          working-directory: packages/sit-onyx/.cloud-foundry

  deploy_documentation:
    name: Deploy documentation
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || contains(github.ref_name, 'dev') && 'dev' || 'prod' }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/templates/node-setup

      - name: üõ†Ô∏è Build Documentation
        run: pnpm build:all --filter=docs
        env:
          # needed for increase rate limit for the GitHub API that is used when building
          # the VitePress documentation
          VITEPRESS_GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚õìÔ∏è Link Sources
        run: ln -s apps/docs/src/.vitepress/dist apps/docs/.cloud-foundry/www

      - name: ‚õÖÔ∏è Deploy to Cloud Foundry
        uses: ./.github/templates/cf-push
        with:
          endpoint: ${{ vars.CF_ENDPOINT }}
          org: ${{ vars.CF_ORG }}
          username: ${{ vars.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          space: ${{ inputs.environment }}
          working-directory: apps/docs/.cloud-foundry

  deploy_playground:
    name: Deploy Playground
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || contains(github.ref_name, 'dev') && 'dev' || 'prod' }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/templates/node-setup

      - name: üõ†Ô∏è Build Documentation
        run: pnpm build:all --filter=playground

      - name: ‚õìÔ∏è Link Sources
        run: ln -s apps/playground/dist apps/playground/.cloud-foundry/www

      - name: ‚õÖÔ∏è Deploy to Cloud Foundry
        uses: ./.github/templates/cf-push
        with:
          endpoint: ${{ vars.CF_ENDPOINT }}
          org: ${{ vars.CF_ORG }}
          username: ${{ vars.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          space: ${{ inputs.environment }}
          working-directory: apps/playground/.cloud-foundry

  deploy_demo_app:
    name: Deploy demo app
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || contains(github.ref_name, 'dev') && 'dev' || 'prod' }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/templates/node-setup

      - name: üõ†Ô∏è Build Documentation
        run: pnpm build:all --filter=demo-app

      - name: Copy .node-version file
        # Cloud Foundry requires a ".nvmrc" file for defining the node version to use
        run: cp .node-version apps/demo-app/.cloud-foundry/.nvmrc

      - name: ‚õìÔ∏è Link Sources
        run: ln -s apps/demo-app/.output apps/demo-app/.cloud-foundry/server

      - name: ‚õÖÔ∏è Deploy to Cloud Foundry
        uses: ./.github/templates/cf-push
        with:
          endpoint: ${{ vars.CF_ENDPOINT }}
          org: ${{ vars.CF_ORG }}
          username: ${{ vars.CF_USERNAME }}
          password: ${{ secrets.CF_PASSWORD }}
          space: ${{ inputs.environment }}
          working-directory: apps/demo-app/.cloud-foundry
