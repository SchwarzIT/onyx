@use "breakpoints.scss";

$gridVariants: (
  // breakpoint columns gap page-padding (rem)
  "2xs" 4 1rem 1,
  "xs" 8 1rem 1,
  "sm" 8 1.5rem 2,
  "md" 12 1.5rem 4,
  "lg" 16 2rem 4,
  "xl" 16 2rem 4
);

@layer onyx.utility {
  /**
  * Grid container base class
  */
  .onyx-grid {
    display: grid;
    grid-template-columns: repeat(var(--onyx-grid-columns), minmax(0, 1fr));
    gap: var(--onyx-grid-gap);
  }

  :has(> .onyx-grid) {
    container-type: inline-size;
  }

  /**
  * Page class to apply padding, max-width and optional centered.
  * Is usually placed at the root element of every page.
  */
  .onyx-page__content {
    padding: var(--onyx-grid-padding);
    max-width: var(--onyx-grid-max-width, none);
    margin-inline: var(--onyx-grid-margin-inline);
  }

  /**
  * Generate styles for all grid variants/breakpoints.
  */
  @each $breakpoint, $columns, $gap, $padding in $gridVariants {
    @if $breakpoint == "2xs" {
      .onyx-grid {
        --onyx-grid-columns: #{$columns};
        --onyx-grid-gap: #{$gap};
      }

      .onyx-page__content {
        --onyx-grid-padding: #{$padding}rem;
      }
    } @else {
      @include breakpoints.container(min, $breakpoint, $offset: -2 * $padding * 16px) {
        .onyx-grid {
          --onyx-grid-columns: #{$columns};
          --onyx-grid-gap: #{$gap};
        }
      }

      @include breakpoints.screen(min, $breakpoint) {
        .onyx-page__content {
          --onyx-grid-padding: #{$padding}rem;
        }
      }
    }
  }

  /**
  * Grid container class for "xl" breakpoint variant with 20 columns
  */
  @include breakpoints.screen(min, xl) {
    .onyx-grid-xl-20 {
      --onyx-grid-columns: 20;
    }
  }

  /**
  * Utility class to allow optional centering for pages with max width.
  * Requires a "onyx-grid-max-*" class to be set.
  */
  .onyx-grid-center {
    --onyx-grid-margin-inline: auto;
  }

  .onyx-grid-max-md {
    --onyx-grid-max-width: #{map-get(breakpoints.$breakpoints, lg)};
  }

  .onyx-grid-max-lg {
    --onyx-grid-max-width: #{map-get(breakpoints.$breakpoints, xl)};
  }

  /**
  * Grid element class for defining how many columns the element spans
  */
  @for $i from 1 through 20 {
    .onyx-grid-span-#{$i} {
      grid-column-end: span min($i, var(--onyx-grid-columns));
    }
  }
}
