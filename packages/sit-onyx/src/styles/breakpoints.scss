/*#region breakpoints*/
$breakpoints: (
  "2xs": 320px,
  xs: 576px,
  sm: 768px,
  md: 992px,
  lg: 1440px,
  xl: 1920px,
);
/*#endregion breakpoints*/

/**
 * Applies CSS only if the screen width satisfies the given onyx breakpoint.
 * @param {string} $min-max - Whether the breakpoint should be considered as min or max width.
 * @param {string} $name - name of the onyx breakpoint. One of: 2xs, xs, sm, md, lg or xl
 * @param {number} $offset - optional offset to add to the min/max width. Useful if both min and max are used for the same breakpoint
 *
 * @example screen(min, sm)
 * @example screen(max, sm)
 */
@mixin screen($min-max, $name, $offset: 0) {
  @media screen and (#{$min-max}-width: #{map-get($breakpoints, $name) + $offset}) {
    @content;
  }
}

/**
 * Applies CSS only if the container width satisfies the given onyx breakpoint.
 * @param {string} $min-max - Whether the breakpoint should be considered as min or max width.
 * @param {string} $name - name of the onyx breakpoint. One of: 2xs, xs, sm, md, lg or xl
 * @param {number} $offset - optional offset to add to the min/max width. Useful if both min and max are used for the same breakpoint
 *
 * @example container(min, sm)
 * @example container(max, sm)
 */
@mixin container($min-max, $name, $offset: 0) {
  @container (#{$min-max}-width: #{map-get($breakpoints, $name) + $offset}) {
    @content;
  }
}
